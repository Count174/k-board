require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const db = require('./db/db');

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

console.log('ü§ñ Telegram Bot –∑–∞–ø—É—â–µ–Ω');

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text.trim();

  // –†–∞—Å—Ö–æ–¥—ã/–¥–æ—Ö–æ–¥—ã
  if (/^[+-]\d+/.test(text)) {
    const match = text.match(/^([+-])(\d+)\s+(.+)/);
    if (match) {
      const [, sign, amountStr, category] = match;
      const type = sign === '+' ? 'income' : 'expense';
      const amount = parseFloat(amountStr);

      db.run(
        'INSERT INTO finances (type, category, amount) VALUES (?, ?, ?)',
        [type, category, amount],
        (err) => {
          if (err) {
            console.error(err);
            bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏.');
          } else {
            bot.sendMessage(chatId, `‚úÖ ${type === 'income' ? '–î–æ—Ö–æ–¥' : '–†–∞—Å—Ö–æ–¥'} –Ω–∞ ${amount}‚ÇΩ (${category}) –¥–æ–±–∞–≤–ª–µ–Ω.`);
          }
        }
      );
    }
    return;
  }

  // –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
  if (text.startsWith('/todo ')) {
    const task = text.slice(6).trim();
    if (!task) return bot.sendMessage(chatId, '‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏.');
    db.run('INSERT INTO todos (text) VALUES (?)', [task], (err) => {
      if (err) return bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏.');
      bot.sendMessage(chatId, `‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: ${task}`);
    });
    return;
  }

  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞–¥–∞—á–∞—Ö
  if (text === '/tasks') {
    db.all('SELECT text FROM todos WHERE completed = 0', [], (err, rows) => {
      if (err || !rows.length) return bot.sendMessage(chatId, '‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!');
      const list = rows.map((r, i) => `${i + 1}. ${r.text}`).join('\n');
      bot.sendMessage(chatId, `üìã –ù–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:\n${list}`);
    });
    return;
  }

  // –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
  if (text.startsWith('/training ')) {
    const [activity, ...notes] = text.slice(10).split('|');
    const now = new Date();
    const date = now.toISOString().split('T')[0];
    const time = now.toTimeString().slice(0, 5);
    db.run(
      'INSERT INTO health (type, date, time, activity, notes) VALUES (?, ?, ?, ?, ?)',
      ['training', date, time, activity.trim(), notes.join('|').trim()],
      (err) => {
        if (err) return bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.');
        bot.sendMessage(chatId, `üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: ${activity}`);
      }
    );
    return;
  }

  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ —Ü–µ–ª—è–º
  if (text === '/goals') {
    db.all('SELECT title, progress, target FROM goals', [], (err, rows) => {
      if (err || !rows.length) return bot.sendMessage(chatId, '–ù–µ—Ç —Ü–µ–ª–µ–π.');
      const list = rows.map(g => `üéØ ${g.title} ‚Äî ${Math.round((g.progress / g.target) * 100)}%`).join('\n');
      bot.sendMessage(chatId, `üéØ –¶–µ–ª–∏:\n${list}`);
    });
    return;
  }

  // help
  if (text === '/help') {
    return bot.sendMessage(chatId, `üõ† –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
+10000 –∑–∞—Ä–ø–ª–∞—Ç–∞ ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥
-500 –∫–æ—Ñ–µ ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥
/todo <—Ç–µ–∫—Å—Ç> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
/tasks ‚Äî –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
/training <—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞> | –∑–∞–º–µ—Ç–∫–∏ ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
/goals ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ü–µ–ª–∏`);
  }

  // default
  bot.sendMessage(chatId, 'ü§ñ –ù–µ –ø–æ–Ω—è–ª. –ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.');
});